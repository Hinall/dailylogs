25/5/24
	        @ApiIgnore
			@RequestMapping(value = "/get_files", method = RequestMethod.POST)
	    public ResponseEntity<?> getFile(@RequestBody String jsonInput) {
	  		  JSONObject jsonObject = new JSONObject(jsonInput);
	        String fileName = jsonObject.getString("images");
	        String directoryPath = jsonObject.getString("directorypath");
	        String[] fileNameArr = fileName.split(",");
	        File dir = new File(directoryPath);
	        Map<String, byte[]> filesContent = new HashMap<>();

	        try {
	            for (String name : fileNameArr) {
	                Path path = Paths.get(dir + File.separator + name);
	                byte[] fileBytes = Files.readAllBytes(path);
	                filesContent.put(path.getFileName().toString(), fileBytes);
	            }
	            return ResponseEntity.ok(filesContent);
	        } catch (IOException e) {
	            e.printStackTrace();
	            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("File not found");
	        }
	    }
	

	  @ApiIgnore
		@RequestMapping(value = "/delete_files", method = RequestMethod.POST)
	    public ResponseEntity<?> deleteSpecifiedFiles(@RequestBody String jsonInput) {
		  JSONObject jsonObject = new JSONObject(jsonInput);
	        String fileNames = jsonObject.getString("images");
	        String uploadDir = jsonObject.getString("directorypath");
	        String[] fileNameArr = fileNames.split(",");
	        List<String> deletedFiles = new ArrayList<>();
	        List<String> notFoundFiles = new ArrayList<>();
	        for (String fileName : fileNameArr) {
	            Path path = Paths.get(uploadDir, fileName);
	            try {
	                if (Files.exists(path)) {
	                    Files.delete(path);
	                    deletedFiles.add(fileName);
	                } else {
	                    notFoundFiles.add(fileName);
	                }
	            } catch (IOException e) {
	                e.printStackTrace();
	                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to delete files");
	            }
	        }

	        Map<String, List<String>> response = new HashMap<>();
	        response.put("deletedFiles", deletedFiles);
	        response.put("notFoundFiles", notFoundFiles);

	        return ResponseEntity.ok(response);
	    }
29-05-24
        @ApiIgnore
			@RequestMapping(path = "/get_files/{imagetype}/{imagename}", method = RequestMethod.GET)
	    public ResponseEntity<?> getFile(@PathVariable("imagetype") String imageType,
	    		@PathVariable("imagename") String imageName) throws IOException {

	        	byte[] fileContent = null;
	        	Path path = Paths.get("D:/Amnex/digital_twin-Angular/digital_twin_frontend/src/app/demo/project-management/images", imageType,imageName);
	        	System.out.println("Image " +path.toString());
	            if (Files.exists(path)) {
	            	fileContent = Files.readAllBytes(path);
	          
	                System.out.println("Image " +path.toString());
	            } else {
	                throw new IOException("File not found: " + imageName);
	            }
	            HttpHeaders headers = new HttpHeaders();
                headers.setContentType(MediaType.parseMediaType("image/png"));
                headers.add("Content-Disposition", "inline;filename=" + imageName);
                headers.setCacheControl("must-revalidate, post-check=0, pre-check=0");
                return new ResponseEntity<byte[]>(fileContent, headers, HttpStatus.OK);
	    }
30april
   <div class="container mt-5">
            <ngb-carousel (slide)="slideActivate($event)">
                <ng-template ngbSlide>
                    <div class="picsum-img-wrapper">
                        <img src="http://localhost:8090/digitaltwin/dashboard/get_files/hh.png" alt="Angular Carousel 1"
                            class="d-block w-100" />
                    </div>
                    <div class="carousel-caption">
                        <h3>Title Goes Here</h3>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                    </div>
                </ng-template>
                <ng-template ngbSlide>
                    <div class="picsum-img-wrapper">
                        <img src="http://localhost:8090/digitaltwin/dashboard/get_files/ss.png"
                            alt="Angular Carousel 2" />
                    </div>
                    <div class="carousel-caption">
                        <h3>Title Goes Here</h3>
                        <p>Consectetur tortor volutpat pretium.</p>
                    </div>
                </ng-template>
            </ngb-carousel>
        </div>
	31april
//save
	    private void saveFile(MultipartFile file, String directory) throws IOException {
	        String filename = file.getOriginalFilename();
	        File dir = new File(directory);
	        if (!dir.exists()) {
	            dir.mkdirs();
	        }
	        Path filePath = Paths.get(directory, filename);
	        Files.delete(filePath);
	    }
//	delete    
	    private void deleteFile(String filename, String directory) throws IOException {
	   
	        File dir = new File(directory);
	        if (!dir.exists()) {
	            dir.mkdirs();
	        }
	        Path filePath = Paths.get(directory, filename);
	        Files.delete(filePath);
	    }  
//		fetch   
	    private ResponseEntity<byte[]> fetchFile(String filename, String directory) throws IOException {
	   
	    	Path path = Paths.get(dir);
            if (Files.exists(path)) {
            	return ResponseEntity.ok(Files.readAllBytes(path));
            } else {
                throw new IOException("File not found: " + filename);
            }
           
	    } 